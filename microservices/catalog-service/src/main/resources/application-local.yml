server.port: 7001
server.tomcat.threads.max: 500
spring.application.name: catalog-service
management.endpoint.health.show-details: ALWAYS
management.endpoints.web.exposure.include: '*'
#logging:
app:
   message: Catalog service
   prod: false
   defaultPageSize: 10
   ms-dns: localhost
   inventory-service:
      host: http://${app.ms-dns}:8002
spring.main.allow-bean-definition-overriding: true
spring:
   datasource:
    url: jdbc:postgresql://localhost:5432/catalog
    username: admin
    password: bycnit#123
   jpa:
    properties:
      hibernate..jdbc.lob.non_contextual_creation: true
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate.ddl-auto: update
    show-sql: true
   h2:
    console:
      enabled: false
      path: /h2-console

   cloud:
    function:
      definition: consumer;producer   
    stream:
      default.contentType: application/json
      kafka:
        binder:
          brokers: ${app.ms-dns}:9092
            
      bindings:
        catalog-audit-out-0:
            content-type: application/json
            destination : catalog-audit-topic      
        producer-out-0:
            content-type: application/json
            destination : first-topic
            producer.requiredGroups: messageGroup
        consumer-in-0:
            content-type: application/json
            destination : first-topic
            group: messageGroup
            consumer:
              maxAttempts: 5
              backOffInitialInterval: 1000
              backOffMaxInterval: 2000
              backOffMultiplier: 3.0
              #use-native-decoding: true # This enables using the custom deserializer
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://172.19.112.1:8000/auth/realms/spmia-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

token.converter.principal-attribute: preferred_username
token.converter.resource-id: ostock

spring.zipkin.baseUrl: http://${app.ms-dns}:9411
management.tracing.sampling.probability: 1.0
management.zipkin.tracing.endpoint: http://${app.ms-dns}:9411/api/v2/spans 
   
hystrix:
   command:
      default:
         execution:
            isolation:
               thread:
                  timeoutInMilliseconds: 10000
feign.hystrix.enabled: true

logging.level.org.springframework.web.servlet.DispatcherServlet: TRACE
logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

logging.file.name : ./log/catalog-service.log
logging.file.path: ./log
logging.level.org.springframework.security: DEBUG

resilience4j.retry.instances.default.maxAttempts: 3
resilience4j.retry.instances.default.waitDuration: 5s
resilience4j.circuitbreaker.instances.default.failure-rate-threshold: 50
resilience4j.circuitbreaker.instances.default.minimum-number-of-calls: 5
resilience4j.circuitbreaker.instances.default.automatic-transition-from-open-to-half-open-enabled: true
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state: 15s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state: 3
resilience4j.circuitbreaker.instances.default.sliding-window-size: 10
resilience4j.circuitbreaker.instances.default.sliding-window-type: count_based

resilience4j.bulkhead.instances.inventoryService.maxConcurrentCalls: 10
resilience4j.bulkhead.instances.inventoryService.maxWaitDuration: 10ms
resilience4j.bulkhead.instances.inventoryService.maxQueueSize: 10
resilience4j.ratelimiter.instances.squareLimit.limitForPeriod: 5
resilience4j.ratelimiter.instances.squareLimit.limitRefreshPeriod: 60s
resilience4j.ratelimiter.instances.squareLimit.timeoutDuration: 0s 
---
#spring.profiles: docker
#spring.rabbitmq.host: rabbitmq
#app.eureka-server: service-discovery
#app.oauth2-host: auth-service
# ----------------
# Orphan comments:
# ----------------
# Was at begin of line:86 :#hystrix.metrics.enabled: true
# Was at begin of line:88 :#spring.zipkin.base-url: http://${app.zipkin-host}:9411