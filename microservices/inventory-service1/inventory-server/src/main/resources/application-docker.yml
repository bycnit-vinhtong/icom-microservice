server.port: 8002
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
spring.application.name: inventory-service

app:
  message: Hello 
  prod: false
  defaultPageSize: 10
  #eureka-server: localhost
  #oauth2-host: http://auth-server
  ms-dns: 172.19.112.1
    

spring:
#  profiles.active: dev
  datasource:
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    properties:
      hibernate.format_sql: true
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
  h2:
    console:
      enabled: false
      path: /h2-console

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.ms-dns}:8000/auth/realms/spmia-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

token.converter.principal-attribute: preferred_username
token.converter.resource-id: ostock

spring.zipkin.baseUrl: http://${app.ms-dns}:9411
management.tracing.sampling.probability: 1.0
management.zipkin.tracing.endpoint: http://${app.ms-dns}:9411/api/v2/spans
logging.file.name : ./log/inventory-service.log
logging.level.org.springframework.web.servlet.DispatcherServlet: TRACE
logging.level.org.springframework.security: DEBUG

#logging:
#  level:
#    org:
#      hibernate:
#        SQL: debug

        
# eureka:
#   client:
#     serviceUrl:
#       defaultZone: http://${app.eureka-server}:8761/eureka/
#     initialInstanceInfoReplicationIntervalSeconds: 5
#     registryFetchIntervalSeconds: 5
#   instance:
#     leaseRenewalIntervalInSeconds: 5
#     leaseExpirationDurationInSeconds: 5
# 
# ribbon.ServerListRefreshInterval: 5000
# 
# ribbon.NFLoadBalancerPingInterval: 5

---
# spring.profiles: docker
# 
# spring.rabbitmq.host: rabbitmq
# 
# app.eureka-server: service-discovery